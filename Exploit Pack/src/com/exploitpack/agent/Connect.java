/**
Exploit Pack - Security Framework for Exploit Developers
Copyright 2012 Juan Sacco http://exploitpack.com

This program is free software: you can redistribute it and/or modify it under the terms of the
GNU General Public License as published by the Free Software Foundation, either version 3 
or any later version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with this program. 
If not, see http://www.gnu.org/licenses/
 **/

package com.exploitpack.agent;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

import com.exploitpack.main.OSValidator;
import com.exploitpack.main.Preferences;

public class Connect {

	private static String OSType;
	private static String pythonFullPath;

	public static void main(String[] args, String ShellCodeHost,
			String ShellCodePort) {
		Runtime RunModule = Runtime.getRuntime();

		// Instance OSValidator
		OSValidator CheckOS = new OSValidator();
		CheckOS.main(null);
		// OUT BORRAR DESP
		System.out.println(OSValidator.OSType);

		OSType = OSValidator.OSType;
		// Obtain Python Path
		try {
			// Read file
			FileReader fstream = new FileReader(
					"data/config/exploitpack.config");
			BufferedReader in = new BufferedReader(fstream);
			pythonFullPath = in.readLine() + "\n";
			// Close the output stream
			in.close();
		} catch (Exception e1) {
			// Catch exception if any
			Preferences.main(null);
			System.err.println("Error: " + e1.getMessage());
		}

		if (OSType.equals("Win")) {
			System.out.println("SHELLCODE: This is Windows");

			// Execute exploit WINDOWS
			try {

				String RunIt = "cmd.exe /T:0A /K " + "\"" + pythonFullPath
						+ "\"" + " data/agent/agentconnect.py" + " "
						+ ShellCodeHost + " " + ShellCodePort;

				System.out.println(RunIt);

				RunModule.exec(RunIt);

			} catch (IOException e1) {

				e1.printStackTrace();

			}

		} else {
			// Execute exploit WINDOWS
			try {
				//String RunIt = "xterm -bg black -fg green +sp" + " " + pythonFullPath + " data/agent/agentconnect.py" + " " + ShellCodeHost + " " + ShellCodePort;
				String RunIt = "xterm -bg black -fg green +sp -T Shellcode-Console -e" + " " + pythonFullPath + " data/agent/agentconnect.py" + " " + ShellCodeHost + " " + ShellCodePort;
				System.out.println(RunIt);

				RunModule.exec(RunIt);
			} catch (IOException e1) {

				e1.printStackTrace();
			}

		}

	}
}
